// common.js
function getNumber(str) {
    return parseInt(str.replace(/\s/g, ''));
}

function number_format(number, decimals, dec_point, thousands_sep) {
    var i, j, kw, kd, km;
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
    if ((j = i.length) > 3) {
        j = j % 3;
    } else {
        j = 0;
    }
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
    return km + kw + kd;
}

function imageResize(src) {
    $('img').not('.logo__img').attr('src', src);
}
// imageResize('https://loremflickr.com/320/440');

const wWidth = $(window).width();

// Функция убирает прокрутку страницы
function setOverflow() {
    $('body').addClass('overflow');
}

// Функция возвращает прокрутку страницы
function removeOverflow() {
    $('body').removeClass('overflow');
}




//index.js
$(function () {

    let navSwiper = new Swiper('.hnav__container', {
        slidesPerView: 'auto',
        spaceBetween: 20,
    });

    let foodSwiper = new Swiper('.sws', {
        slidesPerView: 'auto',
        spaceBetween: 25,
        breakpoints: {
            // when window width is >= 768px
            768: {
                spaceBetween: 35
            },
            // when window width is >= 1200px
            1200: {

                spaceBetween: 50
            }
        }
    });


    $('.sw').on('click', function (e) {
        e.preventDefault();

        let $this = $(this),
            sws = $('.sw'),
            tabs = $('.tab'),
            tab = $(tabs[sws.index($this)]);

        sws.removeClass('active');
        tabs.removeClass('active');
        $this.addClass('active');
        tab.addClass('active');

    });

});
/*YANDEX*/
$(function () {
    ymaps.ready(init);

    var myMap = {
        map: '',
        placemarks: []
    };

    function init() {

        var map = document.querySelector('#map');

        if (map) {
            var data = map.dataset,
                center = data.center;

            myMap.map = new ymaps.Map("map", {
                center: [data.centerX,data.centerY],
                zoom: data.zoom
            });


            myMap.map.behaviors.disable(['scrollZoom']);



            $('.contact__link').each(function (x,i) {
                addPin(i.dataset);
            });

        }
    }

    function addPin(settings) {
       var pin = new ymaps.GeoObjectCollection(),
           placemark = new ymaps.Placemark([settings.baloonX,settings.baloonY], {
                balloonContentHeader: settings.baloonHeader,
                balloonContentBody: settings.baloonBody,
                balloonContentFooter: settings.baloonFooter,
                hintContent: settings.baloonContent
            },
            {
                iconLayout: 'default#image',
                preset: 'islands#redGlyphIcon'
            });
        pin.add(placemark);
        myMap.placemarks.push([settings.baloonX,settings.baloonY]);
        myMap.map.geoObjects.add(pin);

    }

    $('.contact__link').on('click', function (e) {

        myMap.map.setCenter(myMap.placemarks[this.dataset.id],17,{
            checkZoomRange: true
        });

    });
});
/*END YANDEX*/
//index.js
$(function () {

    let addSwiper = new Swiper('.basket__adds', {
        slidesPerView: 5,
        spaceBetween: 20,
        watchOverflow: true,
        // Navigation arrows
        navigation: {
            nextEl: '.basket__next',
            prevEl: '.basket__prev',
        },
    });

    $('.badd__plus').on('click', function (e) {
        e.preventDefault();
        let $this = $(this),
            item = $this.closest('.badd'),
            count = item.find('.badd__count-val'),
            countVal = Number(count.text());

        count.text(countVal + 1);
        checkBadd(item);
    });

    $('.badd__minus').on('click', function (e) {
        e.preventDefault();

        let $this = $(this),
            item = $this.closest('.badd'),
            count = item.find('.badd__count-val'),
            countVal = Number(count.text());

        count.text(countVal - 1);
        checkBadd(item);
    });

    function checkBadd(item) {
        let minus = item.find('.badd__minus'),
            count = item.find('.badd__count-val'),
            countVal = Number(count.text()),
            countParent = count.closest('.badd__count');

        if (countVal > 0) {
            minus.removeClass('disabled');
            countParent.addClass('active');
        } else {
            minus.addClass('disabled');
            countParent.removeClass('active');
        }
    }

    $('.select').styler();

    //ввод цифр в поля
    $('.ocash__input').on('keypress', function (e) {
        if (e.key.match(/[^0-9]/g) || (this.value == 0 && e.key == 0)) {
            e.preventDefault();
        }
    });

    $('.ocard').card({
        // a selector or DOM element for the container
        // where you want the card to appear
        container: '.card-wrapper', // *required*

        // all of the other options from above
        formSelectors: {
            numberInput: 'input[name="cardNumber"]', // optional — default input[name="number"]
            nameInput: 'input[name="cardName"]', // optional — default input[name="number"]
            expiryInput: 'input[name="cardPeriod"]', // optional — default input[name="expiry"]
            cvcInput: 'input[name="cardCvc"]', // optional — default input[name="cvc"]
        },
        formatting: true, // optional - default true
        // if true, will log helpful messages for setting up Card
        debug: true // optional - default false
    });

    $('.input__edit').on('click', function (e) {
        e.preventDefault();
        $(this).prev().attr('readonly', false);
    });

    $('.jsAccountEditContacts').on('click', function (e) {
        e.preventDefault();
        $('.account__contacts').attr('disabled',false);
        $('.acblock__save').addClass('active');
    });

});
//mmenu.js
$(function () {
    // VARIABLES

    // EVENTS
    // Переходм между вкладками
    $('.jsOpenWrap').on('click', function (e) {
        e.preventDefault();
        let $this = $(this),
            wrapper = $this.find('.mmitem__wrap');

        wrapper.addClass('active');
    });

    //Закрытие вкладки
    $('.jsWrapClose').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        let btn = $(this),
            wrap= btn.closest('.mmenu__wrap');
        wrap.removeClass('active');
    });

    // Открытие меню
    $('.jsMenuOpen').on('click', function (e) {
        e.preventDefault();
        openMenu();
    });

    //Закрытие меню
    $('body').on('click', function (e) {
        let target = $(e.target);

        if (target.hasClass('mmenu active') || target.closest('.jsMenuClose').length > 0) {
            closeMenu();
        }
    });

    // Выбор города
    $('.jsMmenuSelect').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();

        let $this = $(this),
            svg = $this.find('.mmitem__svg').html(),
            title = $this.find('.mmitem__title').html(),
            sub = $this.find('.mmitem__sub').html(),
            item = $this.closest('.jsOpenWrap'),
            itemDesc = item.children('.mmitem__desc'),
            wrapper = $this.closest('.mmenu__wrap');

        item.children('.mmitem__svg').html(svg);
        itemDesc.find('.mmitem__title').html(title);
        itemDesc.find('.mmitem__sub').html(sub);
        wrapper.removeClass('active');

    });


    // FUNCTIONS
    // Функция отрытия меню
    function openMenu() {
        let menu = $('.mmenu');
        menu.addClass('active');
        setOverflow();
    }

    // Функция закрытия меню
    function closeMenu() {
        let menu = $('.mmenu'),
            wrappers = menu.find('mmenu__wrap');
        menu.removeClass('active');
        wrappers.removeClass('active');
        removeOverflow();
    }


    //VENDORS
});
//# sourceMappingURL=main.min.js.map